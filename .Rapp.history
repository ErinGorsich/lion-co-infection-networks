summary(yvals)
yvalsgamma
par(mfrow = c(3, 2))
plot(y = addm$RoAT[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", beta[ta]/beta[a])),#
	ylab = expression(R[o]^A))#
lines(y = afdm$RoAT[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$RoCT[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ", beta[tc]/beta[c])),#
	ylab = expression(R[o]^C))#
lines(y = cfd$RoCT[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = addm$RoAT[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab =expression(R[0]^A))	#
lines(y = afdm$RoAT[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$RoCT[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = expression(R[o]^C))#
lines(y = cfd$RoCT[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
plot(y = add$RoAT[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	#xlab = expression(paste("Proportional change in mortality,", gamma[a]/alpha[ta])), #
	ylab = expression(R[0]^A))	#
lines(y = afd$RoAT[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
par(mar=c(1,0.5,0.5,0.1), mfrow = c(1,2))#
ylim = c(min(c(addm$RoAT, add$RoAT)), max(c(addm$RoAT, add$RoAT)))#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2, colorkey = TRUE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
# levelplots for Ro#
cols <- colorRampPalette(brewer.pal(9, "Greens"))(50)   # colors for level plots#
#
par(mar=c(1,0.5,0.5,0.1), mfrow = c(1,2))#
ylim = c(min(c(addm$RoAT, add$RoAT)), max(c(addm$RoAT, add$RoAT)))#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2, colorkey = TRUE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
par(mar=c(1,0.5,0.5,0.1), mfrow = c(1,2))#
ylim = c(min(c(addm$RoAT, add$RoAT)), max(c(addm$RoAT, add$RoAT)))#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
# levelplots for Ro Chronic#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
# levelplots for Ro Acute Frequency Dependent#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute FD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
ylim = c(min(c(addm$RoAT, add$RoAT, afdm$RoAT, afd$RoAT)),#
	max(c(addm$RoAT, add$RoAT, afdm$RoAT, afd$RoAT))+0.1)#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
# levelplots for Ro Acute Frequency Dependent#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for acute FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute FD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
head(afd)
head(cfd)
ylim = c(min(c(cdd$RoCT, cfd$RoCT)),#
	max(c(cdd$RoCT, cfd$RoCT))+0.1)#
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE)
ylim = c(min(c(cdd$RoCT, cfd$RoCT)),#
	max(c(cdd$RoCT, cfd$RoCT))+0.1)#
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cfd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for chronic FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = TRUE)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
head(cfd)
params
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)
ls()
fixed.params
beta_c
beta_cf
head(cfd)
cfd$change_beta_tc <- cfd$beta_tc / 0.0002274442
head(cfd)
# levelplots for Ro Chronic Density and Frequency Dependent#
ylim = c(min(c(cdd$RoCT, cfd$RoCT)),#
	max(c(cdd$RoCT, cfd$RoCT))+0.1)#
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cfd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/12), #
	col.regions=cols, main="Ro for chronic FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = TRUE)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
# levelplots for Ro Chronic Density and Frequency Dependent#
ylim = c(min(c(cdd$RoCT, cfd$RoCT)),#
	max(c(cdd$RoCT, cfd$RoCT))+0.1)#
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Ro for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoCT~ change_alpha_tc*change_beta_tc, #
	data= cfd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Ro for chronic FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = TRUE)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
yvalstrans = c(addm$EE_R[addm$alpha_tu == tdefault_a], #
	afdm$EE_R[addm$alpha_tu == tdefault_a], #
	cdd$EE_C[cdd$alpha_tc == tdefault_c], #
	cfd$EE_C[cfd$alpha_tc == tdefault_c])#
# mortality#
yvalsmort = c(addm$EE_R[addm$beta_tu == default_a], #
	afdm$EE_R[addm$beta_tu == default_a], #
	cdd$EE_C[cdd$beta_tc == default_c], #
	cfd$EE_C[cfd$beta_tc == default_c])#
# recovery#
yvalsgamma = c(add$EE_R[add$beta_tu == default_a], #
	afd$EE_R[afd$beta_tu == default_afd])#
yvals = c(yvalstrans, yvalsmort, yvalsgamma)#
ylim = c(min(yvals), max(yvals) + 0.2)
head(addm)
par(mfrow = c(3, 2))#
plot(y = addm$EE_R[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", beta[ta]/beta[a])),#
	ylab = "Final percent recovered")
lines(y = afdm$EE_R[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
plot(y = cdd$EE_C[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	ylab = ylab = "Final percent recovered")#
lines(y = cfd$EE_C[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")
plot(y = cdd$EE_C[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	ylab = "Final percent recovered")#
lines(y = cfd$EE_C[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")
plot(y = addm$EE_R[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'b', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", #
		beta[ta]/beta[a])),#
	ylab = "Final percent recovered")
plot(y = addm$EE_R[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab = "Final percent recovered")#
lines(y = afdm$EE_R[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
plot(y = cdd$EE_C[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = "Final percent infected")#
lines(y = cfd$EE_C[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")
plot(y = add$EE_R[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	#xlab = expression(paste("Proportional change in mortality,", gamma[a]/alpha[ta])), #
	ylab = expression(R[0]^A))	#
lines(y = afd$EE_R[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
plot(y = add$EE_R[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	#xlab = expression(paste("Proportional change in mortality,", gamma[a]/alpha[ta])), #
	ylab = "Final percent recovered")	#
lines(y = afd$EE_R[afd$beta_tu == default_afd], #
	x = expression(paste("Proportional change in infection duration", #
		gamma[a]/gamma[ta])), #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
plot(y = add$EE_R[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in infection duration", #
		gamma[a]/gamma[ta])),#
	ylab = "Final percent recovered")	#
lines(y = afd$EE_R[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
rm(list = ls())#
library(ggplot2)#
library(RColorBrewer)#
library(lattice)#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
#
add <- read.csv("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_densitydependent_recov.csv")#
afd <- read.csv("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_recov.csv")#
cdd <- read.csv("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronic_densitydependent.csv")#
cfd <- read.csv("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronic_frequencydependent.csv")#
addm <- read.csv("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_densitydependent.csv")#
afdm <- read.csv("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent.csv")#
#
# parameters: #
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acutemildparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# FIX ME#
cfd$change_beta_tc <- cfd$beta_tc / 0.0002274442#
#
######################################################
######################################################
######################################################
# Ro Plots#
######################################################
######################################################
######################################################
#
######################################################
# 2 columns, 3 rows - changing one parameter at a time for checks#
######################################################
par(mfrow = c(3, 2))#
# transmission#
tdefault_a = 0.0019 #addm$acutemildhightrans$alpha_tu # FD == DD#
tdefault_c = 5.20191649555099e-06 #chronicmildparams$alpha_tc#
yvalstrans = c(addm$RoAT[addm$alpha_tu == tdefault_a], #
	afdm$RoAT[addm$alpha_tu == tdefault_a], #
	cdd$RoCT[cdd$alpha_tc == tdefault_c], #
	cfd$RoCT[cfd$alpha_tc == tdefault_c])#
# mortality#
default_a <- 0.000780287474332649 #acutemildhightrans$beta_tu#
default_afd <- 0.780287474332649 # acutemildhightransFD$beta_tu#
default_c <- 4.32144010951403e-07# chronicmildparams$beta_tc#
default_cfd <- 0.000432144010951403 #chronicmildparamsFD$beta_tc#
yvalsmort = c(addm$RoAT[addm$beta_tu == default_a], #
	afdm$RoAT[addm$beta_tu == default_a], #
	cdd$RoCT[cdd$beta_tc == default_c], #
	cfd$RoCT[cfd$beta_tc == default_c])#
# recovery#
yvalsgamma = c(add$RoAT[add$beta_tu == default_a], afd$RoAT[afd$beta_tu == default_afd])#
yvals = c(yvalstrans, yvalsmort, yvalsgamma)#
ylim = c(min(yvals), max(yvals) + 0.2)#
#
plot(y = addm$RoAT[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", beta[ta]/beta[a])),#
	ylab = expression(R[o]^A))#
lines(y = afdm$RoAT[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$RoCT[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ", beta[tc]/beta[c])),#
	ylab = expression(R[o]^C))#
lines(y = cfd$RoCT[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = addm$RoAT[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab =expression(R[0]^A))	#
lines(y = afdm$RoAT[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$RoCT[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = expression(R[o]^C))#
lines(y = cfd$RoCT[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = add$RoAT[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	ylab = expression(R[0]^A))	#
lines(y = afd$RoAT[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
#
# levelplots for Ro Acute Density Dependent#
cols <- colorRampPalette(brewer.pal(9, "Greens"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$RoAT, add$RoAT, afdm$RoAT, afd$RoAT)),#
	max(c(addm$RoAT, add$RoAT, afdm$RoAT, afd$RoAT))+0.1)#
p <- levelplot(RoAT~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(RoAT~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
# 2 columns, 3 rows - changing one parameter at a time for checks#
######################################################
par(mfrow = c(3, 2))#
# transmission#
tdefault_a = 0.0019 #addm$acutemildhightrans$alpha_tu # FD == DD#
tdefault_c = 5.20191649555099e-06 #chronicmildparams$alpha_tc#
yvalstrans = c(addm$RoAT[addm$alpha_tu == tdefault_a], #
	afdm$RoAT[addm$alpha_tu == tdefault_a], #
	cdd$RoCT[cdd$alpha_tc == tdefault_c], #
	cfd$RoCT[cfd$alpha_tc == tdefault_c])#
# mortality#
default_a <- 0.000780287474332649 #acutemildhightrans$beta_tu#
default_afd <- 0.780287474332649 # acutemildhightransFD$beta_tu#
default_c <- 4.32144010951403e-07# chronicmildparams$beta_tc#
default_cfd <- 0.000432144010951403 #chronicmildparamsFD$beta_tc#
yvalsmort = c(addm$RoAT[addm$beta_tu == default_a], #
	afdm$RoAT[addm$beta_tu == default_a], #
	cdd$RoCT[cdd$beta_tc == default_c], #
	cfd$RoCT[cfd$beta_tc == default_c])#
# recovery#
yvalsgamma = c(add$RoAT[add$beta_tu == default_a], afd$RoAT[afd$beta_tu == default_afd])#
yvals = c(yvalstrans, yvalsmort, yvalsgamma)#
ylim = c(min(yvals), max(yvals) + 0.2)#
#
plot(y = addm$RoAT[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", beta[ta]/beta[a])),#
	ylab = expression(R[o]^A))#
lines(y = afdm$RoAT[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$RoCT[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ", beta[tc]/beta[c])),#
	ylab = expression(R[o]^C))#
lines(y = cfd$RoCT[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = addm$RoAT[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab =expression(R[0]^A))	#
lines(y = afdm$RoAT[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$RoCT[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = expression(R[o]^C))#
lines(y = cfd$RoCT[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = add$RoAT[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	ylab = expression(R[0]^A))	#
lines(y = afd$RoAT[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
######################################################
# 2 columns, 3 rows - changing one parameter at a time for checks#
######################################################
# transmission#
yvalstrans = c(addm$EE_R[addm$alpha_tu == tdefault_a], #
	afdm$EE_R[addm$alpha_tu == tdefault_a], #
	cdd$EE_C[cdd$alpha_tc == tdefault_c], #
	cfd$EE_C[cfd$alpha_tc == tdefault_c])#
# mortality#
yvalsmort = c(addm$EE_R[addm$beta_tu == default_a], #
	afdm$EE_R[addm$beta_tu == default_a], #
	cdd$EE_C[cdd$beta_tc == default_c], #
	cfd$EE_C[cfd$beta_tc == default_c])#
# recovery#
yvalsgamma = c(add$EE_R[add$beta_tu == default_a], #
	afd$EE_R[afd$beta_tu == default_afd])#
yvals = c(yvalstrans, yvalsmort, yvalsgamma)#
ylim = c(min(yvals), max(yvals) + 0.2)#
#
par(mfrow = c(3, 2))#
plot(y = addm$EE_R[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", #
		beta[ta]/beta[a])),#
	ylab = "Final percent recovered")#
lines(y = afdm$EE_R[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$EE_C[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	ylab = "Final percent infected")#
lines(y = cfd$EE_C[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = addm$EE_R[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab = "Final percent recovered")#
lines(y = afdm$EE_R[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$EE_C[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = "Final percent infected")#
lines(y = cfd$EE_C[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = add$EE_R[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	ylab = "Final percent recovered")	#
lines(y = afd$EE_R[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
ylim = c(min(c(cdd$EE_C, cfd$EE_C)),#
	max(c(cdd$EE_C, cfd$EE_C))+0.1)#
p <- levelplot(EE_C~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Final prevalence for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_C~ change_alpha_tc*change_beta_tc, #
	data= cfd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Final prevalence for chronic FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = TRUE)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
cols <- colorRampPalette(brewer.pal(9, "Greens"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R)),#
	max(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R))+0.1)#
p <- levelplot(EE_R ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
p <- levelplot(EE_R~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Ro for acute FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	col.regions=cols, main="Ro for acute FD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
# levelplots for Final Prevalence Acute Density Dependent#
######################################################
cols <- colorRampPalette(brewer.pal(9, "Greens"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R)),#
	max(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R))+0.1)#
p <- levelplot(EE_R ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
# levelplots for Final Prevalence Acute Frequency Dependent#
######################################################
p <- levelplot(EE_R~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Final prevalence for acute FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	col.regions=cols, main="Final prevalence for acute FD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
ylim = c(min(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R)),#
	max(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R))+0.1)#
p <- levelplot(EE_R ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Ro for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Ro for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
# levelplots for Final Prevalence Acute Frequency Dependent#
######################################################
p <- levelplot(EE_R~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Final prevalence for acute FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	col.regions=cols, main="Final prevalence for acute FD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
ylim = c(min(c(cdd$EE_C, cfd$EE_C)),#
	max(c(cdd$EE_C, cfd$EE_C))+0.1)#
p <- levelplot(EE_C~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Final prevalence for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_C~ change_alpha_tc*change_beta_tc, #
	data= cfd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Final prevalence for chronic FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = TRUE)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
cols <- colorRampPalette(brewer.pal(9, "Greens"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R)),#
	max(c(addm$EE_R, add$EE_R, afdm$EE_R, afd$EE_R))+0.1)#
p <- levelplot(EE_R ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Final prevalence for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(EE_R ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Final prevalence for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
head(cdf)
head(cfd)
head(addm)
cdd$co <- cdd$EE_CinTB - cdd$EE_CinS#
cfd$co <- cfd$EE_CinTB - cdf$EE_CinS
cfd$co <- cfd$EE_CinTB - cfd$EE_CinS
addm$co <- addm$EE_RinTB - addm$EE_RinnoTB #
add$co <- add$EE_RinTB - add$EE_RinnoTB
afdm$co <- afdm$EE_RinTB - afdm$EE_RinnoTB #
afd$co <- afd$EE_RinTB - afd$EE_RinnoTB
######################################################
# transmission#
yvalstrans = c(addm$co[addm$alpha_tu == tdefault_a], #
	afdm$co[addm$alpha_tu == tdefault_a], #
	cdd$co[cdd$alpha_tc == tdefault_c], #
	cfd$co[cfd$alpha_tc == tdefault_c])#
# mortality#
yvalsmort = c(addm$co[addm$beta_tu == default_a], #
	afdm$co[addm$beta_tu == default_a], #
	cdd$co[cdd$beta_tc == default_c], #
	cfd$co[cfd$beta_tc == default_c])#
# recovery#
yvalsgamma = c(add$co[add$beta_tu == default_a], #
	afd$co[afd$beta_tu == default_afd])#
yvals = c(yvalstrans, yvalsmort, yvalsgamma)#
ylim = c(min(yvals), max(yvals) + 0.2)
par(mfrow = c(3, 2))#
plot(y = addm$co[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", #
		beta[ta]/beta[a])),#
	ylab = "Difference in prevalence")	#
lines(y = afdm$co[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$co[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	ylab = "Difference in prevalence")	#
lines(y = cfd$co[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = addm$co[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab = "Difference in prevalence")	#
lines(y = afdm$co[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$co[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = "Difference in prevalence")	#
lines(y = cfd$co[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = add$co[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	ylab = "Difference in prevalence")	#
lines(y = afd$co[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
par(mfrow = c(3, 2))#
plot(y = addm$co[addm$alpha_tu == tdefault_a], #
	x = addm$change_beta_tu[addm$alpha_tu == tdefault_a], las = 1,#
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in transmission, ", #
		beta[ta]/beta[a])),#
	ylab = "Difference in prevalence")	#
lines(y = afdm$co[afdm$alpha_tu == tdefault_a], #
	x = afdm$change_beta_tu[afdm$alpha_tu == tdefault_a], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$co[cdd$alpha_tc == tdefault_c], #
	x = cdd$change_beta_tc[cdd$alpha_tc == tdefault_c], las = 1,#
	col = "cornflowerblue", type = 'l', ylim = ylim, lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	ylab = "Difference in prevalence")	#
lines(y = cfd$co[cfd$alpha_tc == tdefault_c], #
	x = cfd$change_beta_tc[cfd$alpha_tc == tdefault_c], #
	col = "coral3", lty = 4, cex = 2)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = addm$co[addm$beta_tu == default_a], #
	x = addm$change_alpha_tu[addm$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])), #
	ylab = "Difference in prevalence")	#
lines(y = afdm$co[afdm$beta_tu == default_afd], #
	x = afdm$change_alpha_tu[afdm$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))#
plot(y = cdd$co[cdd$beta_tc == default_c], las = 1,#
	x = cdd$change_alpha_tc[cdd$beta_tc == default_c], #
	col = "cornflowerblue", ylim = ylim, type = "l", lty = 5, main = "Chronic", #
	xlab = expression(paste("Proportional change in mortality,", alpha[ta]/alpha[a])),#
	ylab = "Difference in prevalence")	#
lines(y = cfd$co[cfd$beta_tc == default_cfd], #
	x = cfd$change_alpha_tc[cfd$beta_tc == default_cfd], #
	col = "coral3", lty = 4)#
legend("topright", legend = c("DD", "FD"), lty = c(5, 4),#
	col = c("cornflowerblue", "coral3"), bty = "n")#
#
plot(y = add$co[add$beta_tu == default_a], #
	x = 1/add$change_gamma_tu[add$beta_tu == default_a], las = 1, #
	col = "blue4", ylim = ylim, type = 'l', lty = 2, main = "Acute", #
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	ylab = "Difference in prevalence")	#
lines(y = afd$co[afd$beta_tu == default_afd], #
	x = 1/afd$change_gamma_tu[afd$beta_tu == default_afd], #
	col = "brown3", lty = 3)#
legend("topright", legend = c("DD", "FD"), #
	col = c("blue4", "brown3"), bty = 'n', lty = c(2,3))
cols <- colorRampPalette(brewer.pal(9, "Greens"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$co, add$co, afdm$co, afd$co)),#
	max(c(addm$co, add$co, afdm$co, afd$co))+0.05)#
p <- levelplot(co ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Change in prevalence for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(co ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Change in prevalence for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
cols <- colorRampPalette(brewer.pal(9, "RuBu"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$co, add$co, afdm$co, afd$co)),#
	max(c(addm$co, add$co, afdm$co, afd$co))+0.05)#
p <- levelplot(co ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Change in prevalence for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(co ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Change in prevalence for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
?brewer.pal
display.brewer.pal(n, name)
cols <- colorRampPalette(brewer.pal(9, "RdYlBu"))(50)   # colors for level plots#
#
ylim = c(min(c(addm$co, add$co, afdm$co, afd$co)),#
	max(c(addm$co, add$co, afdm$co, afd$co))+0.05)#
p <- levelplot(co ~ change_alpha_tu*change_beta_tu, #
	data= addm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions = cols, main="Change in prevalence for acute DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(co ~ change_gamma_tu*change_beta_tu, data= add,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in recovery,", #
		gamma[ta]/gamma[a])), #
	col.regions=cols, main="Change in prevalence for acute DD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
p <- levelplot(co~ change_alpha_tu*change_beta_tu, #
	data= afdm, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Change in prevalence for acute FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(co~ change_gamma_tu*change_beta_tu, data= afd,#
	at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20),#
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in infection duration, ", #
		gamma[a]/gamma[ta])),#
	col.regions=cols, main="Change in prevalence for acute FD", cex.lab=1.2)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
######################################################
# levelplots for Final Prevalence Chronic Density and Frequency Dependent#
######################################################
ylim = c(min(c(cdd$co, cfd$co)),#
	max(c(cdd$co, cfd$co))+0.1)#
p <- levelplot(co~ change_alpha_tc*change_beta_tc, #
	data= cdd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Change in prevalence for chronic DD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = FALSE)#
plot(p, position = c(0, 0, 1/2, 1), more = TRUE) #
p <- levelplot(co~ change_alpha_tc*change_beta_tc, #
	data= cfd, at = seq(ylim[1], ylim[2], (ylim[2] - ylim[1])/20), #
	col.regions=cols, main="Change in prevalence for chronic FD", cex.lab=1.2, #
	ylab = expression(paste("Proportional change in transmission, ",#
		beta[tc]/beta[c])),#
	xlab = expression(paste("Proportional change in mortality,", #
		alpha[ta]/alpha[a])), #
	colorkey = TRUE)#
plot(p, position = c(1/2, 0, 1, 1), more = FALSE)
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )
rm(list = ls())#
######################################################
######################################################
# Packages and source code#
######################################################
######################################################
library(deSolve)#
#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
# Parameter files (must read fixed first)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# RHS & Summary stats calculations#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/rhs.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/get_summary_stats.R', chdir = TRUE)#
#
bins <- 10#
#
######################################################
######################################################
# run model analyses#
######################################################
######################################################
#
# Chronic, density dependence model#
######################################
params <- c(fixedparams, chronicmildparams)#
#
# test...#
#R0_TB = (params$beta_t*params$K)/(params$mu+params$alpha_t)#
#EE_TB = params$K/(params$b1*2)*((params$b*params$b1 -#
#	params$mu-params$alpha_t)/params$r - #
#	(1+params$b1)/R0_TB + sqrt(((params$b*params$b1 - #
#	params$mu-params$alpha_t)/params$r - (1+params$b1)/R0_TB)^2 + #
#	(4*params$b1)/R0_TB*(1-1/R0_TB)))#
#EE_suscept = params$K*1/R0_TB#
#times <- seq(0, 400000, 1)#
#S0 <- EE_suscept-1; #
#It0 <- EE_TB#
#Itc0 <- 0#
#Ict0 <- 0#
#Ic0 <- 1#
#x0 <- c(S = S0, It = It0, Ic = Ic0, Itc = Itc0, Ict = Ict0)#
#sol <- as.data.frame(ode(x0, times, rhs_chronicDD, params))#
#plot(y = sol$S, x = sol$time, type = "l", ylim = c(0, 1000))#
#lines(y = sol$It, x = sol$time, col = 2)#
#lines(y = sol$Itc, x = sol$time, col = 3)#
#lines(y = sol$Ict, x = sol$time, col = 4)#
#lines(y = sol$Ic, x = sol$time, col = 5)#
#legend("topright", lty = c(1,1,1,1,1), legend = c("S", "It", "Itc", "Ict", "Ic"), col = c(1,2,3,4,5))#
dfDD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )
table(dfDD$beta_tc)
table(dfDD$alpha_tc)
# Chronic frequency dependent model#
######################################
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )
table(dfFD$beta_tc)
table(dfFD$alpha_tc)
dfDD2 <- data.frame(#
	beta_tc = rep(params$beta_tc, bins + 1 ), #
	alpha_tc = seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )
dfDD2
dfDD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )
dfDD2
dfDD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfDD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfDD <- rbind(dfDD, dfDD2)
head(dfDD)
dfDD$beta_tc
rm(list = ls())#
######################################################
######################################################
# Packages and source code#
######################################################
######################################################
library(deSolve)#
#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
# Parameter files (must read fixed first)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# RHS & Summary stats calculations#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/rhs.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/get_summary_stats.R', chdir = TRUE)#
#
bins <- 10#
#
######################################################
######################################################
# run model analyses#
######################################################
######################################################
#
# Chronic, density dependence model#
######################################
params <- c(fixedparams, chronicmildparams)#
#
# test...#
#R0_TB = (params$beta_t*params$K)/(params$mu+params$alpha_t)#
#EE_TB = params$K/(params$b1*2)*((params$b*params$b1 -#
#	params$mu-params$alpha_t)/params$r - #
#	(1+params$b1)/R0_TB + sqrt(((params$b*params$b1 - #
#	params$mu-params$alpha_t)/params$r - (1+params$b1)/R0_TB)^2 + #
#	(4*params$b1)/R0_TB*(1-1/R0_TB)))#
#EE_suscept = params$K*1/R0_TB#
#times <- seq(0, 400000, 1)#
#S0 <- EE_suscept-1; #
#It0 <- EE_TB#
#Itc0 <- 0#
#Ict0 <- 0#
#Ic0 <- 1#
#x0 <- c(S = S0, It = It0, Ic = Ic0, Itc = Itc0, Ict = Ict0)#
#sol <- as.data.frame(ode(x0, times, rhs_chronicDD, params))#
#plot(y = sol$S, x = sol$time, type = "l", ylim = c(0, 1000))#
#lines(y = sol$It, x = sol$time, col = 2)#
#lines(y = sol$Itc, x = sol$time, col = 3)#
#lines(y = sol$Ict, x = sol$time, col = 4)#
#lines(y = sol$Ic, x = sol$time, col = 5)#
#legend("topright", lty = c(1,1,1,1,1), legend = c("S", "It", "Itc", "Ict", "Ic"), col = c(1,2,3,4,5))#
dfDD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfDD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfDD <- rbind(dfDD, dfDD2)#
#
for (i in 1:length(dfDD[,1])){#
	params <- c(fixedparams, chronicmildparams)#
	params$beta_tc <- dfDD$beta_tc[i]#
	params$alpha_tc <- dfDD$alpha_tc[i]#
	dfDD[i,c(3:8)] <- get_chronic_summary_stats_DD(params)#
	if (i %in% seq(10, length(dfDD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfDD$change_beta_tc <- dfDD$beta_tc/params$beta_c#
dfDD$change_alpha_tc <- dfDD$alpha_tc/ params$alpha_c#
dfDD$is.base <- FALSE#
dfDD$is.base[length(dfDD$is.base)] <- TRUE#
write.csv(dfDD, "chronic_densitydependent.csv")#
rm(params)#
#
# Chronic frequency dependent model#
######################################
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfDF2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfFD <- rbind(dfFD, dfFD2)	#
for (i in 1:length(dfFD[,1])){#
	params$beta_tc <- dfFD$beta_tc[i]#
	params$alpha_tc <- dfFD$alpha_tc[i]#
	dfFD[i,c(3:8)] <- get_chronic_summary_stats_FD(params)#
	if (i %in% seq(10, length(dfFD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfFD$change_beta_tc <- dfFD$beta_tc/params$beta_c#
dfFD$change_alpha_tc <- dfFD$alpha_tc/ params$alpha_c#
dfFD$is.base <- FALSE#
dfFD$is.base[length(dfFD$is.base)] <- TRUE#
write.csv(dfFD, "chronic_frequencydependent.csv")#
rm(params)#
print("Chronic models finished")
rm(list = ls())#
######################################################
######################################################
# Packages and source code#
######################################################
######################################################
library(deSolve)#
#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
# Parameter files (must read fixed first)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# RHS & Summary stats calculations#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/rhs.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/get_summary_stats.R', chdir = TRUE)#
#
bins <- 10#
#
######################################################
######################################################
# run model analyses#
######################################################
######################################################
#
# Chronic, density dependence model#
######################################
params <- c(fixedparams, chronicmildparams)#
#
# test...#
#R0_TB = (params$beta_t*params$K)/(params$mu+params$alpha_t)#
#EE_TB = params$K/(params$b1*2)*((params$b*params$b1 -#
#	params$mu-params$alpha_t)/params$r - #
#	(1+params$b1)/R0_TB + sqrt(((params$b*params$b1 - #
#	params$mu-params$alpha_t)/params$r - (1+params$b1)/R0_TB)^2 + #
#	(4*params$b1)/R0_TB*(1-1/R0_TB)))#
#EE_suscept = params$K*1/R0_TB#
#times <- seq(0, 400000, 1)#
#S0 <- EE_suscept-1; #
#It0 <- EE_TB#
#Itc0 <- 0#
#Ict0 <- 0#
#Ic0 <- 1#
#x0 <- c(S = S0, It = It0, Ic = Ic0, Itc = Itc0, Ict = Ict0)#
#sol <- as.data.frame(ode(x0, times, rhs_chronicDD, params))#
#plot(y = sol$S, x = sol$time, type = "l", ylim = c(0, 1000))#
#lines(y = sol$It, x = sol$time, col = 2)#
#lines(y = sol$Itc, x = sol$time, col = 3)#
#lines(y = sol$Ict, x = sol$time, col = 4)#
#lines(y = sol$Ic, x = sol$time, col = 5)#
#legend("topright", lty = c(1,1,1,1,1), legend = c("S", "It", "Itc", "Ict", "Ic"), col = c(1,2,3,4,5))#
dfDD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfDD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfDD <- rbind(dfDD, dfDD2)
rm(list = ls())
######################################################
######################################################
# Packages and source code#
######################################################
######################################################
library(deSolve)#
#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
# Parameter files (must read fixed first)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# RHS & Summary stats calculations#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/rhs.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/get_summary_stats.R', chdir = TRUE)#
#
bins <- 10#
#
######################################################
######################################################
# run model analyses#
######################################################
######################################################
#
# Chronic, density dependence model#
######################################
params <- c(fixedparams, chronicmildparams)#
#
# test...#
#R0_TB = (params$beta_t*params$K)/(params$mu+params$alpha_t)#
#EE_TB = params$K/(params$b1*2)*((params$b*params$b1 -#
#	params$mu-params$alpha_t)/params$r - #
#	(1+params$b1)/R0_TB + sqrt(((params$b*params$b1 - #
#	params$mu-params$alpha_t)/params$r - (1+params$b1)/R0_TB)^2 + #
#	(4*params$b1)/R0_TB*(1-1/R0_TB)))#
#EE_suscept = params$K*1/R0_TB#
#times <- seq(0, 400000, 1)#
#S0 <- EE_suscept-1; #
#It0 <- EE_TB#
#Itc0 <- 0#
#Ict0 <- 0#
#Ic0 <- 1#
#x0 <- c(S = S0, It = It0, Ic = Ic0, Itc = Itc0, Ict = Ict0)#
#sol <- as.data.frame(ode(x0, times, rhs_chronicDD, params))#
#plot(y = sol$S, x = sol$time, type = "l", ylim = c(0, 1000))#
#lines(y = sol$It, x = sol$time, col = 2)#
#lines(y = sol$Itc, x = sol$time, col = 3)#
#lines(y = sol$Ict, x = sol$time, col = 4)#
#lines(y = sol$Ic, x = sol$time, col = 5)#
#legend("topright", lty = c(1,1,1,1,1), legend = c("S", "It", "Itc", "Ict", "Ic"), col = c(1,2,3,4,5))#
dfDD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfDD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfDD <- rbind(dfDD, dfDD2)
for (i in 1:length(dfDD[,1])){#
	params <- c(fixedparams, chronicmildparams)#
	params$beta_tc <- dfDD$beta_tc[i]#
	params$alpha_tc <- dfDD$alpha_tc[i]#
	dfDD[i,c(3:8)] <- get_chronic_summary_stats_DD(params)#
	if (i %in% seq(10, length(dfDD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfDD$change_beta_tc <- dfDD$beta_tc/params$beta_c#
dfDD$change_alpha_tc <- dfDD$alpha_tc/ params$alpha_c#
dfDD$is.base <- FALSE#
dfDD$is.base[length(dfDD$is.base)] <- TRUE#
write.csv(dfDD, "chronic_densitydependent_withbase.csv")#
rm(params)
rm(list = ls())#
######################################################
######################################################
# Packages and source code#
######################################################
######################################################
library(deSolve)#
#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
# Parameter files (must read fixed first)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# RHS & Summary stats calculations#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/rhs.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/get_summary_stats.R', chdir = TRUE)#
#
bins <- 10#
#
######################################################
######################################################
# run model analyses#
######################################################
######################################################
#
# Chronic, density dependence model#
######################################
params <- c(fixedparams, chronicmildparams)#
#
# test...#
#R0_TB = (params$beta_t*params$K)/(params$mu+params$alpha_t)#
#EE_TB = params$K/(params$b1*2)*((params$b*params$b1 -#
#	params$mu-params$alpha_t)/params$r - #
#	(1+params$b1)/R0_TB + sqrt(((params$b*params$b1 - #
#	params$mu-params$alpha_t)/params$r - (1+params$b1)/R0_TB)^2 + #
#	(4*params$b1)/R0_TB*(1-1/R0_TB)))#
#EE_suscept = params$K*1/R0_TB#
#times <- seq(0, 400000, 1)#
#S0 <- EE_suscept-1; #
#It0 <- EE_TB#
#Itc0 <- 0#
#Ict0 <- 0#
#Ic0 <- 1#
#x0 <- c(S = S0, It = It0, Ic = Ic0, Itc = Itc0, Ict = Ict0)#
#sol <- as.data.frame(ode(x0, times, rhs_chronicDD, params))#
#plot(y = sol$S, x = sol$time, type = "l", ylim = c(0, 1000))#
#lines(y = sol$It, x = sol$time, col = 2)#
#lines(y = sol$Itc, x = sol$time, col = 3)#
#lines(y = sol$Ict, x = sol$time, col = 4)#
#lines(y = sol$Ic, x = sol$time, col = 5)#
#legend("topright", lty = c(1,1,1,1,1), legend = c("S", "It", "Itc", "Ict", "Ic"), col = c(1,2,3,4,5))#
dfDD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfDD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfDD <- rbind(dfDD, dfDD2)#
#
for (i in 1:length(dfDD[,1])){#
	params <- c(fixedparams, chronicmildparams)#
	params$beta_tc <- dfDD$beta_tc[i]#
	params$alpha_tc <- dfDD$alpha_tc[i]#
	dfDD[i,c(3:8)] <- get_chronic_summary_stats_DD(params)#
	if (i %in% seq(10, length(dfDD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfDD$change_beta_tc <- dfDD$beta_tc/params$beta_c#
dfDD$change_alpha_tc <- dfDD$alpha_tc/ params$alpha_c#
dfDD$is.base <- FALSE#
dfDD$is.base[length(dfDD$is.base)] <- TRUE#
write.csv(dfDD, "chronic_densitydependent_withbase.csv")#
rm(params)#
#
# Chronic frequency dependent model#
######################################
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfFD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfFD <- rbind(dfFD, dfFD2)	#
for (i in 1:length(dfFD[,1])){#
	params$beta_tc <- dfFD$beta_tc[i]#
	params$alpha_tc <- dfFD$alpha_tc[i]#
	dfFD[i,c(3:8)] <- get_chronic_summary_stats_FD(params)#
	if (i %in% seq(10, length(dfFD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfFD$change_beta_tc <- dfFD$beta_tc/params$beta_c#
dfFD$change_alpha_tc <- dfFD$alpha_tc/ params$alpha_c#
dfFD$is.base <- FALSE#
dfFD$is.base[length(dfFD$is.base)] <- TRUE#
write.csv(dfFD, "chronic_frequencydependent_withbase.csv")#
rm(params)#
print("Chronic models finished")
head(dfDD)
tail(dfDD, 50)
get_chronic_summary_stats_DD = function(params){#
	with(as.list(params),{#
		# sent chronic free conditions at equilibrium#
		R0_TB = (beta_t*K)/(mu+alpha_t)#
		EE_TB = K/(b1*2)*( (b*b1-mu-alpha_t)/r - (1+b1)/R0_TB + #
			sqrt(((b*b1-mu-alpha_t)/r - (1+b1)/R0_TB)^2 + #
			(4*b1)/R0_TB*(1-1/R0_TB)))#
		EE_suscept = K*1/R0_TB#
		# Ro #
		Ro = (beta_c * EE_suscept) / (mu + alpha_c + beta_ct * EE_TB ) + #
    		(beta_c * EE_suscept) / (mu + alpha_c + beta_ct * EE_TB) *#
    		(beta_ct * EE_TB) / (mu + alpha_ct) + #
    		(beta_tc * EE_TB) / (mu + alpha_tc)#
		# get EE co-infection conditions#
		times <- seq(0, 90000, 1)#
		S0 <- EE_suscept-1#
		It0 <- EE_TB#
		Itc0 <- 0#
		Ict0 <- 0#
		Ic0 <- 1#
		x0 <- c(S = S0, It = It0, Ic = Ic0, Itc = Itc0, Ict = Ict0)#
		sol <- as.data.frame(ode(x0, times, rhs_chronicDD, params, method = "ode45"))#
		EE_N <- sol$S[length(sol$S)] + sol$Ic[length(sol$S)] + #
			sol$It[length(sol$Itc)] + sol$Itc[length(sol$Itc)] + #
			sol$Ict[length(sol$Ict)]#
		EE_TB <- (sol$It[length(sol$Itc)] + sol$Itc[length(sol$Itc)] + #
			sol$Ict[length(sol$Ict)])/ EE_N#
		EE_C <- (sol$Ic[length(sol$S)] + sol$Itc[length(sol$Itc)] + #
			sol$Ict[length(sol$Ict)])/ EE_N#
		EE_CinS <- (sol$Ic[length(sol$Ic)]) / (sol$Ic[length(sol$Ic)] + #
			sol$S[length(sol$S)])#
		EE_CinTB <- (sol$Itc[length(sol$Itc)] + #
			sol$Ict[length(sol$Ict)]) / (sol$It[length(sol$It)] + #
			sol$Itc[length(sol$Itc)] + sol$Ict[length(sol$Ict)])#
		return(c(Ro, EE_C, EE_TB, EE_CinS, EE_CinTB, EE_N))	#
		}#
	)#
}
table(dfDD$beta_tc)
table(dfFD$beta_tc)
table(dfFD$alpha_tc)
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins-1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins-1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfFD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfFD <- rbind(dfFD, dfFD2)
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins-1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins-1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfFD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins - 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins - 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfFD <- rbind(dfFD, dfFD2)
table(dfFD$alpha_tc)
# Chronic frequency dependent model#
######################################
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfFD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfFD <- rbind(dfFD, dfFD2)	#
for (i in 1:length(dfFD[,1])){#
	params$beta_tc <- dfFD$beta_tc[i]#
	params$alpha_tc <- dfFD$alpha_tc[i]#
	dfFD[i,c(3:8)] <- get_chronic_summary_stats_FD(params)#
	if (i %in% seq(10, length(dfFD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}
for (i in 103:length(dfDD[,1])){#
	params <- c(fixedparams, chronicmildparams)#
	params$beta_tc <- dfDD$beta_tc[i]#
	params$alpha_tc <- dfDD$alpha_tc[i]#
	dfDD[i,c(3:8)] <- get_chronic_summary_stats_DD(params)#
	if (i %in% seq(10, length(dfDD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfDD$change_beta_tc <- dfDD$beta_tc/params$beta_c#
dfDD$change_alpha_tc <- dfDD$alpha_tc/ params$alpha_c#
dfDD$is.base <- FALSE#
dfDD$is.base[length(dfDD$is.base)] <- TRUE#
write.csv(dfDD, "chronic_densitydependent_withbase.csv")#
rm(params)#
#
# Chronic frequency dependent model#
######################################
params <- c(fixedparams, chronicmildparamsFD)#
#
dfFD <- data.frame(#
	beta_tc = rep(seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins), bins+1),#
	alpha_tc = rep(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), each = bins+1),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )#
#
dfFD2 <- data.frame(#
	beta_tc = c(rep(params$beta_tc, bins + 1 ), #
		seq(params$beta_tcL, params$beta_tcU, #
		by = (params$beta_tcU- params$beta_tcL)/bins)), #
	alpha_tc = c(seq(params$alpha_tcL, params$alpha_tcU, #
		by = (params$alpha_tcU - params$alpha_tcL)/bins), #
		rep(params$alpha_tc, bins + 1)),#
	RoCT = NA, EE_C = NA, EE_TB = NA, #
	EE_CinS = NA, EE_CinTB = NA, FinalN = NA )	#
dfFD <- rbind(dfFD, dfFD2)	#
for (i in 1:length(dfFD[,1])){#
	params$beta_tc <- dfFD$beta_tc[i]#
	params$alpha_tc <- dfFD$alpha_tc[i]#
	dfFD[i,c(3:8)] <- get_chronic_summary_stats_FD(params)#
	if (i %in% seq(10, length(dfFD[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfDD[,1]), sep = ""))#
	}#
}#
dfFD$change_beta_tc <- dfFD$beta_tc/params$beta_c#
dfFD$change_alpha_tc <- dfFD$alpha_tc/ params$alpha_c#
dfFD$is.base <- FALSE#
dfFD$is.base[length(dfFD$is.base)] <- TRUE#
write.csv(dfFD, "chronic_frequencydependent_withbase.csv")#
rm(params)#
print("Chronic models finished")
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_withbase.csv",#
	sep = ",", header = TRUE, col.names = 1)
?read.table
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_withbase.csv",#
	sep = ",", header = TRUE, row.names = 1)
head(dfFDacute)
dfFDacute<- dfFDacute[,1]
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_withbase.csv",#
	sep = ",", header = TRUE, row.names = 1)
dfFDacute[1,]
colnames(dfFDacute)
test <- dfFDacute[,c(1:12)]
head(test)
dfFDacute<- test
dfFDacute2 <- data.frame(#
	beta_tu = c(rep(params$beta_tu, bins + 1 ), #
		seq(params$beta_tuL, params$beta_tuU, #
		by = (params$beta_tuU- params$beta_tuL)/bins)), #
	alpha_tu = c(seq(params$alpha_tuL, params$alpha_tuU, #
		by = (params$alpha_tuU - params$alpha_tuL)/bins), #
		rep(params$alpha_tu, bins + 1)),#
	RoAT = NA, MaxA = NA, TimeMax = NA, MaxR = NA,#
    EE_FinalN = NA, #
    EE_R = NA, EE_TB = NA, EE_I = NA,#
    EE_RinnoTB = NA, EE_RinTB = NA)#
dfDDacute <- rbind(dfDDacute, dfDDacute2)
params <- c(fixedparams, acutemildhightransFD)
library(deSolve)#
#
setwd("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures")#
# Parameter files (must read fixed first)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/fixedparams.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/chronicmildparams.R', chdir = TRUE)#
#
# RHS & Summary stats calculations#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/rhs.R', chdir = TRUE)#
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/get_summary_stats.R', chdir = TRUE)#
#
bins <- 10
params <- c(fixedparams, acutemildhightransFD)
source('~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acutemildparams.R', chdir = TRUE)
# Acute Frequency dependent model #
######################################
params <- c(fixedparams, acutemildhightransFD)
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_withbase.csv",#
	sep = ",", header = TRUE, row.names = 1)
test <- dfFDacute[,c(1:12)]
dfFDacute<- test
head(test)
dfFDacute2 <- data.frame(#
	beta_tu = c(rep(params$beta_tu, bins + 1 ), #
		seq(params$beta_tuL, params$beta_tuU, #
		by = (params$beta_tuU- params$beta_tuL)/bins)), #
	gamma_tu = c(seq(params$gamma_tuL, params$gamma_tuU, #
		by = (params$gamma_tuU - params$gamma_tuL)/bins), #
		rep(params$gamma_tu, bins + 1)),#
	    RoAT = NA, MaxA = NA, TimeMax = NA, MaxR = NA,#
    EE_FinalN = NA, #
    EE_R = NA, EE_TB = NA, EE_I = NA,#
    EE_RinnoTB = NA, EE_RinTB = NA)
test <- rbind(dfDDacute, dfDDacute2)
dfFDacute <- rbind(dfFDacute, dfFDacute2)
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_withbase.csv",#
	sep = ",", header = TRUE, row.names = 1)
dfFDacute <- dfFDacute[,c(1:12)]
dfFDacute2 <- data.frame(#
	beta_tu = c(rep(params$beta_tu, bins + 1 ), #
		seq(params$beta_tuL, params$beta_tuU, #
		by = (params$beta_tuU- params$beta_tuL)/bins)), #
	gamma_tu = c(seq(params$gamma_tuL, params$gamma_tuU, #
		by = (params$gamma_tuU - params$gamma_tuL)/bins), #
		rep(params$gamma_tu, bins + 1)),#
	    RoAT = NA, MaxA = NA, TimeMax = NA, MaxR = NA,#
    EE_FinalN = NA, #
    EE_R = NA, EE_TB = NA, EE_I = NA,#
    EE_RinnoTB = NA, EE_RinTB = NA)
dfFDacute <- rbind(dfFDacute, dfFDacute2)
head(dfFDacute)
head(dfFDacute2)
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_recov_withbase.csv",#
	sep = ",", header = TRUE, row.names = 1)
head(dfFDacute)
dfFDacute <- dfFDacute[,c(1:12)]
head(dfFDacute)
dfFDacute2 <- data.frame(#
	beta_tu = c(rep(params$beta_tu, bins + 1 ), #
		seq(params$beta_tuL, params$beta_tuU, #
		by = (params$beta_tuU- params$beta_tuL)/bins)), #
	gamma_tu = c(seq(params$gamma_tuL, params$gamma_tuU, #
		by = (params$gamma_tuU - params$gamma_tuL)/bins), #
		rep(params$gamma_tu, bins + 1)),#
	    RoAT = NA, MaxA = NA, TimeMax = NA, MaxR = NA,#
    EE_FinalN = NA, #
    EE_R = NA, EE_TB = NA, EE_I = NA,#
    EE_RinnoTB = NA, EE_RinTB = NA)#
dfFDacute <- rbind(dfFDacute, dfFDacute2)
tail(dfFDacute, 100)
for (i in 122:length(dfFDacute[,1])){#
	params$beta_tu <- dfFDacute$beta_tu[i]#
	params$gamma_tu <- dfFDacute$gamma_tu[i]#
	dfFDacute[i,c(3:length(dfFDacute))] <- get_acute_summary_stats_FD(params)#
	if (i %in% seq(10, length(dfFDacute[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfFDacute[,1]), sep = ""))#
	}#
}#
dfFDacute$change_beta_tu <- dfFDacute$beta_tu/ params$beta_u#
dfFDacute$change_gamma_tu <- dfFDacute$gamma_tu / params$gamma_u#
dfFDacute_recov<- dfFDacute#
write.csv(dfFDacute_recov, "acute_frequencydependent_recov_withbase2.csv")#
rm(params)
# Acute Frequency dependent model, mortality #
######################################
params <- c(fixedparams, acutemildhightransFD)
dfFDacute <- read.table("~/Documents/collaborations/Bree-Carrie-BTBcoinfection_paper/code/24-May-2017 update/R figures/acute_frequencydependent_withbase.csv",#
	sep = ",", header = TRUE, row.names = 1)
summary(dfFDacute)
dfFDacute <- dfFDacute[,c(1:12)]
summary(dfFDacute)
dfFDacute2 <- data.frame(#
	beta_tu = c(rep(params$beta_tu, bins + 1 ), #
		seq(params$beta_tuL, params$beta_tuU, #
		by = (params$beta_tuU- params$beta_tuL)/bins)), #
	alpha_tu = c(seq(params$alpha_tuL, params$alpha_tuU, #
		by = (params$alpha_tuU - params$alpha_tuL)/bins), #
		rep(params$alpha_tu, bins + 1)),#
	RoAT = NA, MaxA = NA, TimeMax = NA, MaxR = NA,#
    EE_FinalN = NA, #
    EE_R = NA, EE_TB = NA, EE_I = NA,#
    EE_RinnoTB = NA, EE_RinTB = NA)#
dfFDacute <- rbind(dfFDacute, dfFDacute2)
tail(dfFDacute, 100)
for (i in 122:length(dfFDacute[,1])){#
	params$beta_tu <- dfFDacute$beta_tu[i]#
	params$alpha_tu <- dfFDacute$alpha_tu[i]#
	dfFDacute[i,c(3:length(dfFDacute))] <- get_acute_summary_stats_FD(params)#
	if (i %in% seq(10, length(dfFDacute[,1]), 10)){#
		print(paste("iteration ", i, " out of ", length(dfFDacute[,1]), sep = ""))#
	}#
}#
dfFDacute$change_beta_tu <- dfFDacute$beta_tu/ params$beta_u#
dfFDacute$change_alpha_tu <- dfFDacute$alpha_tu/ params$alpha_u#
#
write.csv(dfFDacute, "acute_frequencydependent_withbase2.csv")
############################################################
############################################################
############################################################
# Figures for Lion Co-infection manuscript#
# Erin E. Gorsich#
# 12 - May - 2017#
############################################################
############################################################
############################################################
#
############################################################
# read in HB's data, packages and scripts#
############################################################
rm(list = ls())#
setwd("~/GitHub/lion-co-infection-networks")#
alldata<-read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/COINCLIQ.csv")#
drop <- c('THEILERIABABESIA', 'OTHER', 'BABESA') # take out some#
alldata <- alldata[, c(!names(alldata) %in% drop)]#
dataneg<-alldata[alldata$FIV=="Negative",]#
datapos<-alldata[alldata$FIV=="Positive",]#
plotdata<-alldata[,c(11:length(colnames(alldata)))]#
#
library(lattice)  #
library(bipartite)#
library(igraph)  # tried bigraph but not avaliable#
library(gplots)#
library(HiveR)#
library(grid)#
library('circlize')#
library('RColorBrewer')#
library('dplyr')#
#
# functions that groom raw data into network matricies#
source("prep_data_to_matrix.R")#
# functions that calculate network statistics   #
source("calculate_net_and_node_stats.R")#
# functions to make hive plots  #
source("make_bipart_hive_plot.R")   #
source("mod.edge2HPD.R")#
######################
############################################################
############################################################
# Prep analyses for figures#
############################################################
############################################################
#
# make networks#
# all animals, FIV+ animals, FIV- animals#
###################################################
# turn data into matricies for monopartite and bipartite nets#
all2<-make_all_matrix(alldata)  #
all3<-make_all_lionmatrix(alldata) #
allb<-make_all_bipartite_matrix(alldata)#
FIVneg2<-make_matrix(dataneg); colnames(FIVneg2) <- colnames(plotdata[-1])#
FIVneg3<-make_lionmatrix(dataneg); rownames(FIVneg3) <- colnames(plotdata[-1])#
FIVpos2<-make_matrix(datapos); colnames(FIVpos2) <- colnames(plotdata[-1])#
FIVpos3<-make_lionmatrix(datapos); rownames(FIVpos3) <- colnames(plotdata[-1])#
#
# parnet: nodes=parasites; edges= # of shared hosts, symmetric#
all_parnet<- tcrossprod(t(all2)) #
FIVneg_parnet<- tcrossprod(t(FIVneg2))#
FIVpos_parnet<- tcrossprod(t(FIVpos2))#
# all_lionnet: nodes=lions; edges=number of shared parasites, symmetric#
all_lionnet<-tcrossprod(t(all3))#
FIVneg_lionnet<-tcrossprod(t(FIVneg3))  #
FIVpos_lionnet<-tcrossprod(t(FIVpos3))#
#
# Bipartite networks: nodes = parasites and lions, linkes = infection#
FIVpos_binet<- make_bipartite_matrix(datapos)#
FIVneg_binet<- make_bipartite_matrix(dataneg)#
#
# summarize and write results to csv: #
calculate_net_and_node_stats(all_parnet, name="allparasitenetwork")#
calculate_net_and_node_stats(all_lionnet, name="alllionnetwork")#
calculate_net_and_node_stats(FIVpos_parnet, name="FIVposparasitenetwork")#
calculate_net_and_node_stats(FIVneg_parnet, name="FIVnegparasitenetwork")#
calculate_net_and_node_stats(FIVpos_lionnet, name="FIVposlionnetwork")#
calculate_net_and_node_stats(FIVneg_lionnet, name="FIVneglionnetwork")#
############################################################
############################################################
# Figure 0: Ugly network diagram & Overall Hive Plot with FIV highlihgted#
############################################################
############################################################
# specify color choices by type#
gut = c("ASCARIDS", "TAPES", "HOOKS", "COCCIDIA", "TOXO", "WHIPS")#
bloodborne = c("ERLICHIAANAPLASMA", "BFELIS", "BLEO", #
	"BMICROTI", "BLENGUA", "TBICORNIS", "HEPATOZOON", #
	"TANNAE", "BCANIS", "BROSSI", "BVOGELI")#
virus = c("FIV", "CDV", "FPV", "CALICI", "CORONA")#
#
newdf<-data.frame(parasite=c(virus, gut, bloodborne), #
    type=c(rep("virus", length(virus)), rep("gut", length(gut)), #
    		rep("bloodborne", length(bloodborne)) ), #
    prev=NA, #
    col= c("#000033", rep("#663399", length(virus)-1), #
    		rep("#006666", length(gut)), #
		rep("#FF6600", length(bloodborne))) )#
#
newdf<-data.frame(parasite=c(virus, gut, bloodborne), #
    type=c(rep("virus", length(virus)), rep("gut", length(gut)), #
    		rep("bloodborne", length(bloodborne)) ), #
    prev=NA, #
    col= c("red4", rep("#663399", length(virus)-1), #
    		rep("#66CCCC", length(gut)), #
		rep("#FF9933", length(bloodborne))) )#
#
# Hive plots
ls()
newdf
newdf<-data.frame(parasite=c(virus, gut, bloodborne), #
    type=c(rep("virus", length(virus)), rep("gut", length(gut)), #
    		rep("bloodborne", length(bloodborne)) ), #
    prev=NA, #
    col= c("#000033", rep("#663399", length(virus)-1), #
    		rep("#006666", length(gut)), #
		rep("#FF6600", length(bloodborne))) )
newdf
plot(all_parnet)
calculate_net_and_node_stats
ga<-graph.adjacency(all_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self
plot(ga)
ga_all<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)
ga<-graph.adjacency(all_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self#
ga_all<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
#
ga<-graph.adjacency(FIVneg_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self#
ga_neg<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
#
ga<-graph.adjacency(FIVneg_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self#
ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)
par(mfrow = c(1,3))#
plot(ga_all, main = "All parasites")#
plot(ga_neg, main = "FIV -")#
plot(ga_pos, main = "FIV +")
?plot
?igraph
str(ga_pos)
ga$vertex
ga$verticies
ga$name
FIVneg_parnet
rownames(FIVneg_parnet)
colnames(FIVneg_parnet)==rownames(FIVneg_parnet)
[order(as.numeric(V(ga_neg)$name)
order(as.numeric(V(ga_neg)$name)
)
V(ga_neg)$name
head(newdf)
newdf$parasite == V(ga_all$name)
newdf$parasite == V(ga_all)$name
newdf$parasite
V(ga_all)$name
newdf$parasite[order(as.numeric(V(ga_all$name)))]
newdf$parasite[order(as.numeric(V(ga_all)$name))]
order(as.numeric(V(ga_all)$name))
newdf$parasite[match(newdf$parasite, V(ga_all)$name]
newdf$parasite[match(newdf$parasite, V(ga_all)$name)]
newdf$parasite[match( V(ga_all)$name, newdf$parasite)]
head(newdf)
plot(ga_all, main = "All parasites", col = newdf$col[match( V(ga_all)$name, newdf$parasite)])
newdf$col[match( V(ga_all)$name, newdf$parasite)]
as.character(newdf$col[match( V(ga_all)$name, newdf$parasite)])
plot(ga_all, main = "All parasites", col = as.character(newdf$col[match( V(ga_all)$name, newdf$parasite)]))
?plot
plot(ga_all, main = "All parasites", vertex.col = as.character(newdf$col[match( V(ga_all)$name, newdf$parasite)]))
set.seed(1)
ga<-graph.adjacency(all_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self#
ga_all<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
V(ga_all)$color <- as.character(newdf$col[match( V(ga_all)$name, newdf$parasite)])
plot(ga_all, main = "All parasites", vertex.col = )
plot(ga_all, main = "All parasites")
ga<-graph.adjacency(FIVneg_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self#
ga_neg<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
V(ga_neg)$color <- as.character(newdf$col[match( V(ga_neg)$name, newdf$parasite)])#
#
ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) # undirected/named/weighted/self#
ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
#
par(mfrow = c(1,3))#
plot(ga_all, main = "All parasites", label = NA)#
plot(ga_neg, main = "FIV -", label = NA)#
plot(ga_pos, main = "FIV +", label = NA)
plot(ga_all, main = "All parasites", vertex.label = NA)
par(mfrow = c(1,3))#
plot(ga_all, main = "All parasites", vertex.label = NA)#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
ga_pos$layout <- layout.circle#
ga_neg$layout <- layout.circle#
par(mfrow = c(1,2))#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
?par
par(mfrow = c(1,2), mar = c(1, 0.5, 0.5, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
par(mfrow = c(1,2), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
degree(gapos, mode = "all")
degree(ga_pos, mode = "all")
data.frame(degree(ga_pos, mode = "all"))
as.data.frame(degree(ga_pos, mode = "all"))
summry(as.data.frame(degree(ga_pos, mode = "all")))
summray(as.data.frame(degree(ga_pos, mode = "all")))
summary(as.data.frame(degree(ga_pos, mode = "all")))
summary(as.data.frame(degree(ga_pos, mode = "all")), colnames= "degree")
summary(as.data.frame(degree(ga_pos, mode = "all")), colnames= c("degree"))
data.frame(degree(ga_pos, mode = "all"))[,1]
V(ga_neg)$size <- data.frame(degree(ga_neg, mode = "all"))[,1]#
V(ga_pos)$size <- data.frame(degree(ga_pos, mode = "all"))[,1]
V(ga_neg)$size
V(ga_pos)$size
n <- data.frame(degree(ga_neg, mode = "all"))[,1] #
p <- data.frame(degree(ga_pos, mode = "all"))[,1]#
V(ga_neg)$size <- (n + 1) / (2*max(c(n, p)))#
V(ga_pos)$size <- (p + 1) / (2*max(c(n, p)))
par(mfrow = c(1,2), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
V(ga_neg)$size
n <- data.frame(degree(ga_neg, mode = "all"))[,1] #
p <- data.frame(degree(ga_pos, mode = "all"))[,1]#
V(ga_neg)$size <- (n + 1) / (6*max(c(n, p)))#
V(ga_pos)$size <- (p + 1) / (6*max(c(n, p)))#
par(mfrow = c(1,2), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
?igraph.plot
?plot.igraph
n <- data.frame(degree(ga_neg, mode = "all"))[,1] #
p <- data.frame(degree(ga_pos, mode = "all"))[,1]#
V(ga_neg)$size <- (n + 1)# / (6*max(c(n, p))) # default size is 15#
V(ga_pos)$size <- (p + 1)# / (6*max(c(n, p)))#
par(mfrow = c(1,2), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA)#
plot(ga_pos, main = "FIV +", vertex.label = NA)
par(mfrow = c(1,2), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA, layout = random)
plot(ga_neg, main = "FIV -", vertex.label = NA, layout = layout.random)
plot(ga_pos, main = "FIV +", vertex.label = NA, layout = layout.random)
make_matrix
FIVpos2
?sample
FIVpos3
FIVneg2
FIVpos2
rownames(FIVneg2)
numnodes <- length(rownames(FIVneg2))
numnodes <- length(rownames(FIVneg2))#
par(mfrow = c(4, 5), mar = c(1, 0.5, 1, 0.1))
plot(ga_pos, main = "FIV +", vertex.label = NA, layout = layout.random)
or(i in 1:20){#
	ss_FIVpos2 <- sample_n(FIVpos2, numnodes, replace = FALSE)#
	FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))#
#
	# make networks and plot	#
	ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) #
	ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
	V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
	V(ga_pos)$size <- 1 + data.frame(degree(ga_pos, mode = "all"))[,1]#
#
	plot(ga_pos, main = "Subsample FIV +", vertex.label = NA, layout = layout.random)#
	rm(ga, gapos, ss_FIVpos2, FIVpos_parnet)#
	# if wanted to do the same for FIVneg#
	#FIVneg2<-make_matrix(dataneg); colnames(FIVneg2) <- colnames(plotdata[-1])#
	#FIVneg_parnet<- tcrossprod(t(FIVneg2))#
}
ls()
rm(p, n)
ls()
par(mfrow = c(4, 5), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA, layout = layout.random)#
for(i in 1:20){#
	ss_FIVpos2 <- sample_n(FIVpos2, numnodes, replace = FALSE)#
	FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))#
#
	# make networks and plot	#
	ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) #
	ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
	V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
	V(ga_pos)$size <- 1 + data.frame(degree(ga_pos, mode = "all"))[,1]#
#
	plot(ga_pos, main = "Subsample FIV +", vertex.label = NA, layout = layout.random)#
	rm(ga, gapos, ss_FIVpos2, FIVpos_parnet)#
}
FIVneg2<-make_matrix(dataneg); colnames(FIVneg2) <- colnames(plotdata[-1])#
FIVneg3<-make_lionmatrix(dataneg); rownames(FIVneg3) <- colnames(plotdata[-1])#
FIVpos2<-make_matrix(datapos); colnames(FIVpos2) <- colnames(plotdata[-1])#
FIVpos3<-make_lionmatrix(datapos); rownames(FIVpos3) <- colnames(plotdata[-1])#
#
# parnet: nodes=parasites; edges= # of shared hosts, symmetric#
all_parnet<- tcrossprod(t(all2))#
FIVneg_parnet<- tcrossprod(t(FIVneg2))#
FIVpos_parnet<- tcrossprod(t(FIVpos2))#
# all_lionnet: nodes=lions; edges=number of shared parasites, symmetric#
all_lionnet<-tcrossprod(t(all3))#
FIVneg_lionnet<-tcrossprod(t(FIVneg3))  #
FIVpos_lionnet<-tcrossprod(t(FIVpos3))
numnodes <- length(rownames(FIVneg2))#
par(mfrow = c(4, 5), mar = c(1, 0.5, 1, 0.1))#
plot(ga_neg, main = "FIV -", vertex.label = NA, layout = layout.random)#
for(i in 1:20){#
	ss_FIVpos2 <- sample_n(FIVpos2, numnodes, replace = FALSE)#
	FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))#
#
	# make networks and plot	#
	ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) #
	ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
	V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
	V(ga_pos)$size <- 1 + data.frame(degree(ga_pos, mode = "all"))[,1]#
#
	plot(ga_pos, main = "Subsample FIV +", vertex.label = NA, layout = layout.random)#
	rm(ga, gapos, ss_FIVpos2)#
}
FIVpos2
data.frame(FIVpos2)
ss_FIVpos2 <- sample_n(data.frame(FIVpos2), numnodes, replace = FALSE)
FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))
for(i in 1:19){#
	ss_FIVpos2 <- sample_n(data.frame(FIVpos2), numnodes, replace = FALSE)#
	FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))#
#
	# make networks and plot	#
	ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) #
	ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
	V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
	V(ga_pos)$size <- 1 + data.frame(degree(ga_pos, mode = "all"))[,1]#
#
	plot(ga_pos, main = "Subsample FIV +", vertex.label = NA, layout = layout.random)#
	rm(ga, gapos, ss_FIVpos2)#
}
numnodes
plot(ga_neg, main = "FIV -", vertex.label = NA, layout = layout.circle)
for(i in 1:19){#
	ss_FIVpos2 <- sample_n(data.frame(FIVpos2), numlions, replace = FALSE)#
	FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))#
#
	# make networks and plot	#
	ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) #
	ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
	V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
	V(ga_pos)$size <- 1 + data.frame(degree(ga_pos, mode = "all"))[,1]#
#
	plot(ga_pos, main = "Subsample FIV +", vertex.label = NA, layout = layout.circle)#
	rm(ga, gapos, ss_FIVpos2)#
}
numlions <- length(rownames(FIVneg2))
for(i in 1:19){#
	ss_FIVpos2 <- sample_n(data.frame(FIVpos2), numlions, replace = FALSE)#
	FIVpos_parnet<- tcrossprod(t(ss_FIVpos2))#
#
	# make networks and plot	#
	ga<-graph.adjacency(FIVpos_parnet, mode="upper", weighted=TRUE) #
	ga_pos<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)#
	V(ga_pos)$color <- as.character(newdf$col[match(V(ga_pos)$name, newdf$parasite)])#
	V(ga_pos)$size <- 1 + data.frame(degree(ga_pos, mode = "all"))[,1]#
#
	plot(ga_pos, main = "Subsample FIV +", vertex.label = NA, layout = layout.circle)#
	rm(ga, gapos, ss_FIVpos2)#
}

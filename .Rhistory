newdf$name[12]<-"THEILERIA"
newdf$name[19]<-"HEPATO"
head(newdf)
head(alldata)
newdf2<-newdf[-1,]
newdf2$prevneg<-NA;  newdf2$prevpos<-NA
for (i in 1:length(newdf2$parasite)){
newdf2$prevneg[i]<-get_prev(dataneg[,colnames(dataneg) == newdf2$parasite[i]])
newdf2$prevpos[i]<-get_prev(datapos[,colnames(datapos) == newdf2$parasite[i]])
}
virus2<-newdf2[newdf2$type=="virus",]
gut2<-newdf2[newdf2$type=="gut",]
blood2<-newdf2[newdf2$type=="bloodborne",]
par(mfrow=c(1,2), mar=c(4,5,4,2)+0.1)
barplot2(height=c(virus2$prevneg[order(virus2$prev, decreasing=FALSE)],
gut2$prevneg[order(gut2$prev, decreasing=FALSE)],
blood2$prevneg[order(blood2$prev, decreasing=FALSE)]),
names.arg=c(as.character(virus2$name[order(virus2$prev, decreasing=FALSE)]),
as.character(gut2$name[order(gut2$prev, decreasing=FALSE)]),
as.character(blood2$name[order(blood2$prev, decreasing=FALSE)])),
col=c(as.character(virus2$col[order(virus2$prev, decreasing=FALSE)]),
as.character(gut2$col[order(gut2$prev, decreasing=FALSE)]),
as.character(blood2$col[order(blood2$prev, decreasing=FALSE)])),
horiz=TRUE, las=1, main="FIV negative ", xlab="Prevalence")
barplot2(height=c(virus2$prevpos[order(virus2$prevpos, decreasing=FALSE)],
gut2$prevpos[order(gut2$prevpos, decreasing=FALSE)],
blood2$prevpos[order(blood2$prevpos, decreasing=FALSE)]),
names.arg=c(as.character(virus2$name[order(virus2$prevpos, decreasing=FALSE)]),
as.character(gut2$name[order(gut2$prevpos, decreasing=FALSE)]),
as.character(blood2$name[order(blood2$prevpos, decreasing=FALSE)])),
col=c(as.character(virus2$col[order(virus2$prevpos, decreasing=FALSE)]),
as.character(gut2$col[order(gut2$prevpos, decreasing=FALSE)]),
as.character(blood2$col[order(blood2$prevpos, decreasing=FALSE)])),
horiz=TRUE, las=1, main="FIV positive ", xlab="Prevalence")
head(alldata)
newdf <- alldata[-,'THEILERIABABESIA']
newdf <- alldata[,-'THEILERIABABESIA']
drop <- c('THEILERIABABESIA', 'OTHER', 'BABESA')
newdf <- alldata[, !names(alldata) %in% drop]
head(newdf)
alldata <- alldata[, !names(alldata) %in% drop]
all<-make_edgelist(alldata)
head(all)
length(all[,1])
head(plotdata)
plotdata <- plotdata[, !names(plotdata) %in% drop]
colnames(plotdata)
colnames(alldata)
colnames(alldata[-c(1:10)])
head(all)
length(unique(all$parasite))
source("prep_data_to_matrix.R")   # functions that groom raw data into network matricies
all2<-make_all_matrix(alldata)  # for making parasite monoparte matrix
head(all2)
all3<-make_all_lionmatrix(alldata)
head(all3)
allb<-make_all_bipartite_matrix(alldata)
head(allb)
head(all2)
colnames(all2)
rownames(all3)
allb<-make_all_bipartite_matrix(alldata)
all_parnet<- tcrossprod(t(all2))  # nodes=parasites; edges=number of shared hosts, symmetric
all_lionnet<-tcrossprod(t(all3))
head(allb)
calculate_net_and_node_stats(all_parnet, name="allparasitenetwork")
calculate_net_and_node_stats(all_lionnet, name="alllionnetwork")
getwd()
head(dataneg)
dataneg <- dataneg[, !names(dataneg) %in% drop]
head(dataneg)
colnames(dataneg)
colnames(dataneg[-1:10])
colnames(dataneg)[-1:10]
colnames(dataneg)[-c(1:10)]
length(dataneg[,1])
head(dataneg)
head(datapos)
length(datapos[,1])
dataneg <- dataneg[, !names(dataneg) %in% drop]
FIVneg<- make_edgelist(dataneg)
head(FIVneg)
length(unique(FIVneg$parasite))
colnames(dataneg)
?var
head(all2)
library(igraph)
?degree
?simplify
?betweenness
head(all2)
head(all_parnet)
View(all_parnet)
ga<-graph.adjacency(all_parnet, mode="upper", weighted=TRUE)
ga
str(ga)
ga
ga2<-graph.adjacency(all_parnet, mode="upper", weighted=NULL)
str(ga2)
ga
ga2
ga3<- simplify(ga, remove.multiple=FALSE, remove.loops=TRUE)
ga3
print.igraph(ga3)
?print.igraph
degree(ga)
degree(ga3)
degree(ga2)
graph.strength(ga)
?betweenness
graph.strength(ga2)
ga
ga2
ga3
str(ga3)
ga3
ga
ga2
simplify(ga2)
?closeness
getwd()
calculate_net_and_node_stats(all_parnet, name="allparasitenetwork")
calculate_net_and_node_stats(all_lionnet, name="alllionnetwork")
View(newdf)
source("calculate_net_and_node_stats.R")  # functions that calculate network statistics
source("calculate_net_and_node_stats.R")  # functions that calculate network statistics
calculate_net_and_node_stats(all_parnet, name="allparasitenetwork")
source("calculate_net_and_node_stats.R")  # functions that calculate network statistics
calculate_net_and_node_stats(all_parnet, name="allparasitenetwork")
calculate_net_and_node_stats(all_lionnet, name="alllionnetwork")
ga
ga2
temp<-NA
dataneg <- dataneg[, !names(dataneg) %in% drop]
FIVneg<- make_edgelist(dataneg)
FIVneg2<-make_matrix(dataneg); FIVneg3<-make_lionmatrix(dataneg)
summary(dataneg)
head(FIVneg)
head(FIVneg2)
colnames(FIVneg2) <- colnames(plotdata[-1])
head(FIVneg2)
FIVneg_parnet<- tcrossprod(t(FIVneg2))  # nodes=parasites; edges=number of shared hosts, symmetric
FIVneg_lionnet<-tcrossprod(t(FIVneg3))
datapos <- datapos[, !names(datapos) %in% drop]
FIVpos<-make_edgelist(datapos)
FIVpos2<-make_matrix(datapos); FIVpos3<-make_lionmatrix(datapos)
colnames(FIVpos2) <- colnames(plotdata[-1])
head(FIVpos2)
FIVpos_parnet<- tcrossprod(t(FIVpos2))  # nodes=parasites; edges=number of shared hosts, symmetric
FIVpos_lionnet<-tcrossprod(t(FIVpos3))  # nodes=lions; edges=number of shared parasites, symmetric
FIVpos_binet<- make_bipartite_matrix(datapos)
FIVneg_binet<- make_bipartite_matrix(dataneg)
calculate_net_and_node_stats(FIVpos_parnet, name="FIVposparasitenetwork")
calculate_net_and_node_stats(FIVneg_parnet, name="FIVnegparasitenetwork")
calculate_net_and_node_stats(FIVpos_lionnet, name="FIVposlionnetwork")
calculate_net_and_node_stats(FIVneg_lionnet, name="FIVneglionnetwork")
head(FIVpos_lionnet)
head(FIVneg_lionnet)
head(datapos)
length(datapos[,1])
head(FIVpos2)
head(FIVpos3)
head(datapos)
colnames(plotdata)
make_matrix= function(data){
tmat<-matrix(NA, nrow=length(data[,1]), ncol=length(datapos$LION),  # makes lions columns
dimnames=list(data$LION, colnames(colnames(plotdata[-1])))) # all infections minus FIV
for (i in 1:nrow(tmat)){
for (j in 1:ncol(tmat)){
ifelse(data[i,11+j]=="Positive", tmat[i,j] <- 1, tmat[i, j] <- 0)
}
}
return(tmat)
}
make_matrix= function(data){
tmat<-matrix(NA, nrow=length(data[,1]), ncol=21,  # makes lions columns
dimnames=list(data$LION, colnames(colnames(plotdata[-1])))) # all infections minus FIV
for (i in 1:nrow(tmat)){
for (j in 1:ncol(tmat)){
ifelse(data[i,11+j]=="Positive", tmat[i,j] <- 1, tmat[i, j] <- 0)
}
}
return(tmat)
}
source("prep_data_to_matrix.R")   # functions that groom raw data into network matricies
FIVneg2<-make_matrix(dataneg); FIVneg3<-make_lionmatrix(dataneg)
colnames(FIVneg2) <- colnames(plotdata[-1])
head(FIVneg3)
head(FIVneg2)
length(FIVneg2[,1])
colnames(FIVneg3)
FIVneg_lionnet<-tcrossprod(t(FIVneg3))  # nodes=lions; edges=number of shared parasites, symmetric
head(FIVneg_lionnet)
datapos <- datapos[, !names(datapos) %in% drop]
FIVpos<-make_edgelist(datapos)
FIVpos2<-make_matrix(datapos); FIVpos3<-make_lionmatrix(datapos)
FIVpos_parnet<- tcrossprod(t(FIVpos2))  # nodes=parasites; edges=number of shared hosts, symmetric
head(FIVpos_parnet)
colnames(FIVpos2) <- colnames(plotdata[-1])
FIVpos_parnet<- tcrossprod(t(FIVpos2))  # nodes=parasites; edges=number of shared hosts, symmetric
FIVpos_lionnet<-tcrossprod(t(FIVpos3))  # nodes=lions; edges=number of shared parasites, symmetric
head(FIVpos_lionnet)
calculate_net_and_node_stats(FIVpos_lionnet, name="FIVposlionnetwork")
calculate_net_and_node_stats(FIVneg_lionnet, name="FIVneglionnetwork")
pall<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/net_stats_allparasitenetwork.csv")
head(allb)
rownames(allb)
head(alldata)
source("make_bipart_hive_plot.R")
make_bipart_hive_plot(allb, datatype="all", demogdata=alldata, save_nodedf=FALSE, name="nosave")
head(alldata)
head(allb)
get_prev<-function(dat) {length(dat[dat=="Positive"])/length(dat)}
temp<-apply(alldata[,c(11:35)], 2, get_prev)
gut = c("ASCARIDS", "TAPES", "HOOKS", "COCCIDIA", "TOXO")
bloodborne = c("ERLICHIAANAPLASMA", "THEILERIABABESIA", "BABESA",
"BFELIS", "BLEO", "BMICROTI", "BLENGUA", "TBICORNIS",
"HEPATOZOON", "TANNAE", "BCANIS", "BROSSI", "BVOGELI")
virus = c("FIV", "CDV", "FPV", "CALICI", "CORONA")
newdf<-data.frame(parasite=c(virus, gut, bloodborne), type=c(rep("virus", length(virus)), rep("gut", length(gut)), rep("bloodborne", length(bloodborne)) ), prev=NA, col= c(rep("darkseagreen", length(virus)), rep("darksalmon", length(gut)), rep("lightblue3", length(bloodborne))) )
for (i in 1:length(newdf$parasite)){
temp<- alldata[,colnames(alldata) == as.character(newdf$parasite[i])]
newdf$prev[i]<- length(temp[temp=="Positive"])/length(temp)
rm(temp)
}
newdf$parasite<-as.character(newdf$parasite)
newdf$name<-newdf$parasite
newdf$name[11]<-"ERLANAP"
newdf$name[12]<-"THEILERIA"
newdf$name[19]<-"HEPATO"
virus<-newdf[newdf$type=="virus",]
gut<-newdf[newdf$type=="gut",]
blood<-newdf[newdf$type=="bloodborne",]
setwd("~/GitHub/lion-co-infection-networks")
alldata<-read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/COINCLIQ.csv")
dataneg<-alldata[alldata$FIV=="Negative",]
datapos<-alldata[alldata$FIV=="Positive",]
plotdata<-alldata[,c(11:35)]
library(lattice)
library(bipartite)
library(igraph)  # tried bigraph but not avaliable
library(gplots)
library(HiveR)
library(grid)
#####################
# Functions: There are three script files required to run this script
source("prep_data_to_matrix.R")   # functions that groom raw data into network matricies
source("calculate_net_and_node_stats.R")  # functions that calculate network statistics
source("make_bipart_hive_plot.R")
source("mod.edge2HPD.R")
get_prev<-function(dat) {length(dat[dat=="Positive"])/length(dat)}
temp<-apply(alldata[,c(11:35)], 2, get_prev)
gut = c("ASCARIDS", "TAPES", "HOOKS", "COCCIDIA", "TOXO")
bloodborne = c("ERLICHIAANAPLASMA", "THEILERIABABESIA", "BABESA",
"BFELIS", "BLEO", "BMICROTI", "BLENGUA", "TBICORNIS",
"HEPATOZOON", "TANNAE", "BCANIS", "BROSSI", "BVOGELI")
virus = c("FIV", "CDV", "FPV", "CALICI", "CORONA")
newdf<-data.frame(parasite=c(virus, gut, bloodborne), type=c(rep("virus", length(virus)), rep("gut", length(gut)), rep("bloodborne", length(bloodborne)) ), prev=NA, col= c(rep("darkseagreen", length(virus)), rep("darksalmon", length(gut)), rep("lightblue3", length(bloodborne))) )
for (i in 1:length(newdf$parasite)){
temp<- alldata[,colnames(alldata) == as.character(newdf$parasite[i])]
newdf$prev[i]<- length(temp[temp=="Positive"])/length(temp)
rm(temp)
}
newdf$parasite<-as.character(newdf$parasite)
newdf$name<-newdf$parasite
newdf$name[11]<-"ERLANAP"
newdf$name[12]<-"THEILERIA"
newdf$name[19]<-"HEPATO"
virus<-newdf[newdf$type=="virus",]
gut<-newdf[newdf$type=="gut",]
blood<-newdf[newdf$type=="bloodborne",]
par(mar=c(4,5,4,2)+0.1)
barplot2(height=c(virus$prev[order(virus$prev, decreasing=FALSE)],
gut$prev[order(gut$prev, decreasing=FALSE)],
blood$prev[order(blood$prev, decreasing=FALSE)]),
names.arg=c(as.character(virus$name[order(virus$prev, decreasing=FALSE)]),
as.character(gut$name[order(gut$prev, decreasing=FALSE)]),
as.character(blood$name[order(blood$prev, decreasing=FALSE)])),
col=c(as.character(virus$col[order(virus$prev, decreasing=FALSE)]),
as.character(gut$col[order(gut$prev, decreasing=FALSE)]),
as.character(blood$col[order(blood$prev, decreasing=FALSE)])),
horiz=TRUE, las=1)
head(newdf)
test <- newdf[, !newdf$parasite %in% drop]
test <- newdf[!newdf$parasite %in% drop,]
head(test)
newdf <- newdf[!newdf$parasite %in% drop,]
make_bipart_hive_plot(allb, datatype="all", demogdata=alldata, save_nodedf=FALSE, name="nosave")
head(ppos)
pall<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/net_stats_allparasitenetwork.csv")
pneg<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/net_stats_FIVnegparasitenetwork.csv")
ppos<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/net_stats_FIVposparasitenetwork.csv")
head(ppos)
head(pneg)
pall<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/node_stats_allparasitenetwork.csv")
pneg<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/node_stats_FIVnegparasitenetwork.csv")
ppos<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/node_stats_FIVposparasitenetwork.csv")
head(pneg)
head(ppos)
par(mfrow = c(1,2))
hist(pneg$DegreeWt); hist(ppos$DegreeWt)
hist(pneg$DegreeUnWt); hist(ppos$DegreeUnWt)
par(mfrow = c(2,2))
hist(pneg$DegreeWt); hist(ppos$DegreeWt)
hist(pneg$DegreeUnWt); hist(ppos$DegreeUnWt)
summary(pneg)
summary(ppos)
a<- hist(pneg$DegreeWt)
a
b<- hist(pneg$DegreeWt)
b
b<- hist(ppos$DegreeWt)
b
b<- hist(ppos$DegreeUnWt)
b
c<- hist(pneg$DegreeUnWt)
c
dev.off()
negwt <- hist(pneg , breaks = wtbreaks , plot = FALSE)
poswt <- hist(ppos , breaks = wtbreaks , plot = FALSE)
negun <- hist(pneg , breaks = unbreaks , plot = FALSE)
posun <- hist(ppos , breaks = unbreaks , plot = FALSE)
head(pneg)
negwt <- hist(pneg$DegreeWt , breaks = wtbreaks , plot = FALSE)
poswt <- hist(ppos$DegreeWt , breaks = wtbreaks , plot = FALSE)
negun <- hist(pneg$DegreeUnWt , breaks = unbreaks , plot = FALSE)
posun <- hist(ppos$DegreeUnWt , breaks = unbreaks , plot = FALSE)
wtbreaks <- seq(0, 500, 50)
unbreaks <- seq(0, 20, 2)
negwt <- hist(pneg$DegreeWt , breaks = wtbreaks , plot = FALSE)
poswt <- hist(ppos$DegreeWt , breaks = wtbreaks , plot = FALSE)
negun <- hist(pneg$DegreeUnWt , breaks = unbreaks , plot = FALSE)
posun <- hist(ppos$DegreeUnWt , breaks = unbreaks , plot = FALSE)
negwt
poswt
plot(negwt$mids, negwt$counts, xlim = c(0, 450), ylim= c(0, 20),
xlab = "Number of shared parasites", ylab= "Frequency", las= 1,
type = "l", pch= 1, lty = 1, lwd = 1, tck = -0.025, bty = "n")
plot(negwt$mids, negwt$counts, xlim = c(0, 450), ylim= c(0, 20),
xlab = "Number of shared parasites", ylab= "Frequency", las= 1,
type = "b", pch= 1, lty = 1, lwd = 1, tck = -0.025, bty = "n")
plot(negwt$mids, negwt$counts, xlim = c(0, 450), ylim= c(0, 20),
xlab = "Number of shared parasites", ylab= "Frequency", las= 1,
type = "b", pch= 1, lty = 1, lwd = 1, tck = -0.025, bty = "n", pch=19)
plot(negwt$mids, negwt$counts, xlim = c(0, 450), ylim= c(0, 20),
xlab = "Number of shared parasites", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids, poswt$counts, lwd = 1, lty = 3)
points(poswt$mids, poswt$counts, pch= 21, lty = 3)
negun
posun
plot(negun$mids, negun$counts, xlim = c(0, 20), ylim= c(0, 5),
xlab = "Unweighted number of shared parasites", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
# unweighted
plot(negun$mids, negun$counts, xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted number of shared parasites", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
ppos
table(ppos$DegreeUnWt)
table(pneg$DegreeUnWt)
?par
par(mfrow = c(1,2), mai= c(4, 2, 3, 1))
# unweighted
plot(negun$mids, negun$counts, xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
# weighted
plot(negwt$mids, negwt$counts, xlim = c(0, 450), ylim= c(0, 20),
xlab = "Weighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids, poswt$counts, lwd = 1, lty = 3)
points(poswt$mids, poswt$counts, pch= 21, lty = 3)
legend("topright", c("FIV -", "FIV +"), lty=c(1, 3), pch=c(19, 21), lwd=1, bty="n")
dev.off()
par(mfrow = c(1,2), mai= c(4, 2, 3, 1))
plot(negun$mids, negun$counts, xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
?par
par(mfrow = c(1,2), mar= c(4, 2, 3, 1))
# unweighted
plot(negun$mids, negun$counts, xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
plot(negwt$mids, negwt$counts, xlim = c(0, 450), ylim= c(0, 20),
xlab = "Weighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids, poswt$counts, lwd = 1, lty = 3)
points(poswt$mids, poswt$counts, pch= 21, lty = 3)
legend("topright", c("FIV -", "FIV +"), lty=c(1, 3), pch=c(19, 21), lwd=1, bty="n")
?par
negwt
poswt
length(negwt$counts > 0)
negwt$counts
length(negwt$counts[negwt$counts > 0])
plot(negwt$mids[1:length(negwt$counts[negwt$counts > 0])], negwt$counts[1:length(negwt$counts[negwt$counts > 0])], xlim = c(0, 450), ylim= c(0, 20),
xlab = "Weighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], lwd = 1, lty = 3)
points(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], pch= 21, lty = 3)
legend("topright", c("FIV -", "FIV +"), lty=c(1, 3), pch=c(19, 21), lwd=1, bty="n")
dev.off()
plot(negwt$mids[1:length(negwt$counts[negwt$counts > 0])], negwt$counts[1:length(negwt$counts[negwt$counts > 0])], xlim = c(0, 450), ylim= c(0, 20),
xlab = "Weighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], lwd = 1, lty = 3)
points(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], pch= 21, lty = 3)
legend("topright", c("FIV -", "FIV +"), lty=c(1, 3), pch=c(19, 21), lwd=1, bty="n")
poswt
negun
posun
par(mfrow = c(1,2), mar= c(4, 3, 3, 1))
# unweighted
plot(negun$mids[1:(length(negun$counts)-2)], negun$counts[1:(length(negun$counts)-2)], xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
# weighted
plot(negwt$mids[1:length(negwt$counts[negwt$counts > 0])], negwt$counts[1:length(negwt$counts[negwt$counts > 0])], xlim = c(0, 450), ylim= c(0, 20),
xlab = "Weighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], lwd = 1, lty = 3)
points(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], pch= 21, lty = 3)
legend("topright", c("FIV -", "FIV +"), lty=c(1, 3), pch=c(19, 21), lwd=1, bty="n")
par(mfrow = c(1,2), mar= c(4, 4, 3, 1))
# unweighted
plot(negun$mids[1:(length(negun$counts)-2)], negun$counts[1:(length(negun$counts)-2)], xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
# weighted
plot(negwt$mids[1:length(negwt$counts[negwt$counts > 0])], negwt$counts[1:length(negwt$counts[negwt$counts > 0])], xlim = c(0, 450), ylim= c(0, 20),
xlab = "Weighted degree", ylab= "", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], lwd = 1, lty = 3)
points(poswt$mids[1:(length(negwt$mids)- 1)], poswt$counts[1:(length(negwt$mids)- 1)], pch= 21, lty = 3)
legend("topright", c("FIV -", "FIV +"), lty=c(1, 3), pch=c(19, 21), lwd=1, bty="n")
?barplot2
19/21
2/21
pall<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/node_stats_alllionnetwork.csv")
pneg<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/node_stats_FIVneglionnetwork.csv")
ppos<- read.csv("~/Documents/postdoc_buffology/HB-lion_coinfection_network/lion_coinfection_networks_files/node_stats_FIVposlionnetwork.csv")
hist(negwt)
hist(pneg$DegreeWt)
hist(ppos$DegreeWt)
max(ppos$DegreeWt)
hist(ppos$DegreeUnWt)
max(ppos$DegreeUnWt)
max(pneg$DegreeUnWt)
hist(pneg$DegreeUnWt)
pneg
wtbreaks <- seq(0, 400, 50)
unbreaks <- seq(0, 85, 5)
wtbreaks
unbreaks
wtbreaks <- seq(0, 400, 50)
unbreaks <- seq(0, 85, 10)
negwt <- hist(pneg$DegreeWt , breaks = wtbreaks , plot = FALSE)
poswt <- hist(ppos$DegreeWt , breaks = wtbreaks , plot = FALSE)
negun <- hist(pneg$DegreeUnWt , breaks = unbreaks , plot = FALSE)
posun <- hist(ppos$DegreeUnWt , breaks = unbreaks , plot = FALSE)
wtbreaks
max(ppos$DegreeWt)
poswt <- hist(ppos$DegreeWt , breaks = wtbreaks , plot = FALSE)
max(ppos$DegreeUnWt)
unbreaks
unbreaks <- seq(0, 90, 10)
negwt <- hist(pneg$DegreeWt , breaks = wtbreaks , plot = FALSE)
poswt <- hist(ppos$DegreeWt , breaks = wtbreaks , plot = FALSE)
negun <- hist(pneg$DegreeUnWt , breaks = unbreaks , plot = FALSE)
posun <- hist(ppos$DegreeUnWt , breaks = unbreaks , plot = FALSE)
negun
posun
plot(negun$mids[1:length(negun$counts[negun$counts> 0])], negun$counts[1:length(negun$counts[negun$counts> 0])], xlim = c(0, 20), ylim= c(0, 7),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
plot(negun$mids[1:length(negun$counts[negun$counts> 0])], negun$counts[1:length(negun$counts[negun$counts> 0])], xlim = c(0, 85), ylim= c(0, 50),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
negun
hist(pneg$DegreeUnWt)
hist(ppos$DegreeUnWt)
plot(negun$mids[1:length(negun$counts[negun$counts> 0])], negun$counts[1:length(negun$counts[negun$counts> 0])], xlim = c(0, 85), ylim= c(0, 50),
xlab = "Unweighted degree", ylab= "Frequency", las= 1,
type = "b", pch= 19, lty = 1, lwd = 1, tck = -0.025, bty = "n")
lines(posun$mids, posun$counts, lwd = 1, lty = 3)
points(posun$mids, posun$counts, pch= 21, lty = 3)
negwt
poswt
negun
posun
poswt
negwt
